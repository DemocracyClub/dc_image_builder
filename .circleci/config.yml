version: 2.1

orbs:
  node: circleci/node@5.0.3
  aws-cli: circleci/aws-cli@3.1.3

jobs:
  test:
    docker:
      - image: cimg/python:3.12-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "uv.lock" }}-{{ checksum "package.json" }}
      - run:
          name: Install uv
          command: scripts/install_uv.sh
      - run:
          name: Install python dependencies
          command: uv sync --all-packages --all-groups --no-python-downloads
      - run:
          name: Pre-test checks
          command: |
            uv lock --locked
            uv pip check
      - node/install
      - node/install-packages
      - save_cache:
          paths:
            - ./.venv
            - ./node_modules
            - $HOME/.cache/uv
          key: v2-dependencies-{{ checksum "uv.lock" }}-{{ checksum "package.json" }}
      - run:
          name: Ruff
          command: |
            uv run ruff check .
            uv run ruff format --check .

  cdk-synth:
    machine:
      image: ubuntu-2404:2024.05.1
    environment:
      AWS_ACCESS_KEY_ID: "fake"
      AWS_DEFAULT_REGION: "eu-west-2"
      AWS_SECRET_ACCESS_KEY: "fake"
    steps:
      - checkout
      - restore_cache:
          keys:
            - machine-image-v2-dependencies-{{ checksum "uv.lock" }}-{{ checksum "package.json" }}
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Install uv
          command: scripts/install_uv.sh
      - run:
          name: Install python dependencies
          command: uv sync --all-packages --all-groups --no-python-downloads
      - run:
          name: Install NPM dependencies
          command: |
            npm install
      - save_cache:
          paths:
            - ./.venv
            - ./node_modules
            - $HOME/.cache/uv
          key: machine-image-v2-dependencies-{{ checksum "uv.lock" }}-{{ checksum "package.json" }}
      - run:
          name: Build lambda requirements
          command: ./scripts/lambda-requirements.sh
      - run:
          name: CDK Synth
          command: uv run ./node_modules/.bin/cdk synth --ci
      - persist_to_workspace:
          root: ~/project/
          paths: [
            cdk.out,
            lambda/update_base_images/requirements.txt,
          ]
  deploy:
    machine:
      image: ubuntu-2404:2024.05.1
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - machine-image-v2-dependencies-{{ checksum "uv.lock" }}-{{ checksum "package.json" }}
      - run:
          name: Install uv
          command: scripts/install_uv.sh
      - run:
          name: CDK Deploy
          command: uv run ./node_modules/.bin/cdk deploy --ci --all


workflows:
  test-and-deploy:
    jobs:
      - test:
          name: Build and test
      - cdk-synth:
          name: CDK Synth
          requires:
            - "Build and test"
      - deploy:
          name: Deploy
          requires:
            - "CDK Synth"
          context: [ deployment-production-shared-image-builder ]
          filters: { branches: { only: [ main ] } }
